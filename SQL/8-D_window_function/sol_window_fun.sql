CREATE TABLE product_groups (
    group_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    group_name VARCHAR2(255) NOT NULL
);
 
CREATE TABLE products (
    product_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    product_name VARCHAR2(255) NOT NULL,
    price DECIMAL(11, 2),
    group_id NUMBER NOT NULL,
    CONSTRAINT fk_products_groups FOREIGN KEY (group_id) REFERENCES product_groups(group_id)
);
 
INSERT INTO product_groups (group_name)
VALUES ('Smartphone');
 
INSERT INTO product_groups (group_name)
VALUES ('Laptop');
 
INSERT INTO product_groups (group_name)
VALUES ('Tablet');
 
 
INSERT INTO products (product_name, group_id, price)
VALUES ('Microsoft Lumia', 1, 200);
 
INSERT INTO products (product_name, group_id, price)
VALUES ('HTC One', 1, 400);
 
INSERT INTO products (product_name, group_id, price)
VALUES ('Nexus', 1, 500);
 
INSERT INTO products (product_name, group_id, price)
VALUES ('iPhone', 1, 900);
 
INSERT INTO products (product_name, group_id, price)
VALUES ('HP Elite', 2, 1200);
 
INSERT INTO products (product_name, group_id, price)
VALUES ('Lenovo Thinkpad', 2, 700);
 
INSERT INTO products (product_name, group_id, price)
VALUES ('Sony VAIO', 2, 700);
 
INSERT INTO products (product_name, group_id, price)
VALUES ('Dell Vostro', 2, 800);
 
INSERT INTO products (product_name, group_id, price)
VALUES ('iPad', 3, 700);
 
INSERT INTO products (product_name, group_id, price)
VALUES ('Kindle Fire', 3, 150);
 
INSERT INTO products (product_name, group_id, price)
VALUES ('Samsung Galaxy Tab', 3, 200);
 
 
-- Example 1: ROW_NUMBER()
SELECT 
    product_name,
    group_name,
    price,
    ROW_NUMBER() OVER (PARTITION BY group_name ORDER BY price) AS rn
FROM
    products p
INNER JOIN product_groups pg ON p.group_id = pg.group_id;
 
-- Example 2: FIRST_VALUE()
SELECT 
    product_name,
    group_name,
    price,
    FIRST_VALUE(price) OVER (PARTITION BY group_name ORDER BY price) AS lowest_price_per_group
FROM
    products p
INNER JOIN product_groups pg ON p.group_id = pg.group_id;
 
-- Example 3: LAST_VALUE()
SELECT 
    product_name,
    group_name,
    price,
    LAST_VALUE(price) OVER (PARTITION BY group_name ORDER BY price RANGE BETWEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING) AS highest_price_per_group
FROM
    products p
INNER JOIN product_groups pg ON p.group_id = pg.group_id;
 
-- Example 4: LAG()
SELECT 
    product_name,
    group_name,
    price,
    LAG(price, 1) OVER (PARTITION BY group_name ORDER BY price) AS prev_price,
    price - LAG(price, 1) OVER (PARTITION BY group_name ORDER BY price) AS cur_prev_diff
FROM
    products p
INNER JOIN product_groups pg ON p.group_id = pg.group_id;
 